function Auth(){}$(function(){(new Auth).run()}),Auth.prototype.run=function(){this.listenLoginEvent(),this.listenCreateCommonUserBtnClick(),this.GetRoleList(),this.ResetPassword(),this.DeleteUser(),this.EditUser()},Auth.prototype.ResetPassword=function(){$(".reset_password").click(function(e){e.preventDefault();var o=$(this).attr("data-user-id");$("#confirmResetPasswordBtn").click(function(e){e.preventDefault();var t=$("#inputPassword").val();$.ajax({type:"post",url:"/cpmauth/reset_password/",data:{pk:o,new_password:t},success:function(e){console.log(e),window.messageBox.show(e.data),window.location.reload()}})})})},Auth.prototype.EditUser=function(){$("#saveChangesBtn").click(function(e){var t=$("#editId").val(),o=$("#createUsernameEdit").val(),s=$("#createEmailEdit").val(),a=$("#createTelephoneEdit").val(),n=$("#createRoleEdit").find("option:selected").attr("data-values");$.ajax({type:"post",url:"/cpmauth/edit_save_user/",data:{pk:t,username:o,email:s,telephone:a,role:n},success:function(e){window.messageBox.show(e.data),window.location.href="/cpmauth/get_userlist/"}})})},Auth.prototype.DeleteUser=function(){$(".del_user").click(function(e){var t=$(this).attr("data-user-id");$.ajax({type:"post",url:"/cpmauth/del_user/",data:{pk:t},success:function(e){console.log(e),window.messageBox.show(e.data),window.location.href="/cpmauth/get_userlist/"}}),console.log(t)})},Auth.prototype.GetRoleList=function(){$("#createCommonUserBtnModel").click(function(e){e.preventDefault(),$.ajax({type:"get",url:"/cpmauth/query_role_list/",success:function(e){var t={content:JSON.parse(e.data)};console.log(t);var o=template("roleName",t);document.getElementById("createRole").innerHTML=o}})})},Auth.prototype.listenLoginEvent=function(){$("#loginBtn").click(function(e){var t=$("#exampleInputUsername").val(),o=$("#exampleInputPassword1").val(),s=$("#exampleCheck1").prop("checked");e.preventDefault(),console.log($.cookie("csrftoken")),$.post({url:"/cpmauth/mylogin/",data:{username:t,password:o,remember:s},success:function(e){"200"==e.code?window.location.reload():(console.log(e),window.messageBox.show(e.data))}})})},Auth.prototype.listenCreateCommonUserBtnClick=function(){$("#createCommonUserBtn").click(function(e){e.preventDefault();var t=$("#createUsername").val();if(t){var o=$("#createPassword1").val(),s=$("#createPassword2").val();if(o)if(s)if(o==s){var a=$("#createEmail").val();if(a){var n=$("#createTelephone").val();if(n){var r={username:t,password1:o,password2:s,email:a,telephone:n,role:$("#createRole").find("option:selected").attr("data-values")};console.log(r),$.ajax({type:"post",url:"/cpmauth/create_common_user/",data:r,success:function(e){200==e.code?(window.messageBox.show("创建用户成功"),$("#createCommonUser").modal("hide")):(r=JSON.parse(e.data),console.log(r),window.messageBox.show(r.__all__?r.__all__:""+r.password1?r.password1:""+r.password2?r.password2:""),window.location.reload())}})}else window.messageBox.show("请输入手机")}else window.messageBox.show("请输入邮箱")}else window.messageBox.show("两次密码不一致");else window.messageBox.show("请重复密码");else window.messageBox.show("请输入密码")}else window.messageBox.show("请输入用户名")})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
