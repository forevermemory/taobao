function Message() {
    var e = this;
    e.isAppended = !1,
    e.wrapperHeight = 48,
    e.wrapperWidth = 300,
    e.initStyle(),
    e.initElement(),
    e.listenCloseEvent()
}
Message.prototype.initStyle = function() {
    var e = this;
    e.errorStyle = {
        wrapper: {
            background: "#f2dede",
            color: "#993d3d"
        },
        close: {
            color: "#993d3d"
        }
    },
    e.successStyle = {
        wrapper: {
            background: "#dff0d8",
            color: "#468847"
        },
        close: {
            color: "#468847"
        }
    },
    e.infoStyle = {
        wrapper: {
            background: "#d9edf7",
            color: "#5bc0de"
        },
        close: {
            color: "#5bc0de"
        }
    }
},
Message.prototype.initElement = function() {
    var e = this;
    e.wrapper = $("<div></div>"),
    e.wrapper.css({
        padding: "10px",
        "font-size": "14px",
        width: "300px",
        position: "fixed",
        "z-index": "10000",
        left: "50%",
        top: "-48px",
        "margin-left": "-150px",
        height: "48px",
        "box-sizing": "border-box",
        border: "1px solid #ddd",
        "border-radius": "4px",
        "line-height": "24px",
        "font-weight": 700
    }),
    e.closeBtn = $("<span>×</span>"),
    e.closeBtn.css({
        "font-family": 'core_sans_n45_regular,"Avenir Next","Helvetica Neue",Helvetica,Arial,"PingFang SC","Source Han Sans SC","Hiragino Sans GB","Microsoft YaHei","WenQuanYi MicroHei",sans-serif;',
        "font-weight": "700",
        float: "right",
        cursor: "pointer",
        "font-size": "22px"
    }),
    e.messageSpan = $("<span class='xfz-message-group'></span>"),
    e.wrapper.append(e.messageSpan),
    e.wrapper.append(e.closeBtn)
},
Message.prototype.listenCloseEvent = function() {
    var e = this;
    e.closeBtn.click(function() {
        e.wrapper.animate({
            top: -e.wrapperHeight
        })
    })
},
Message.prototype.showError = function(e) {
    this.show(e, "error")
},
Message.prototype.showSuccess = function(e) {
    this.show(e, "success")
},
Message.prototype.showInfo = function(e) {
    this.show(e, "info")
},
Message.prototype.show = function(e, s) {
    var o = this;
    o.isAppended || ($(document.body).append(o.wrapper), o.isAppended = !0),
    o.messageSpan.text(e),
    "error" === s ? (o.wrapper.css(o.errorStyle.wrapper), o.closeBtn.css(o.errorStyle.close)) : "info" === s ? (o.wrapper.css(o.infoStyle.wrapper), o.closeBtn.css(o.infoStyle.close)) : (o.wrapper.css(o.successStyle.wrapper), o.closeBtn.css(o.successStyle.close)),
    o.wrapper.animate({
        top: 0
    },
    function() {
        setTimeout(function() {
            o.wrapper.animate({
                top: -o.wrapperHeight
            })
        },
        3e3)
    })
},
window.messageBox = new Message;







// 操作成功后重新刷新页面ajax
function ReloadAjax(type,data,url,btn,modal) {  
    $('#'+btn).addClass('disabled')
    $('#'+btn).text('操作中。。')
    $.ajax({
        type: type,
        url: url,
        data: data,
        success: function (response) {
            console.log(response)
            $('#'+btn).removeClass('disabled')
            $('#'+btn).text('确认')
            if(response['code']=='0'){
                window.messageBox.show('操作成功')
                $('#'+modal).modal('hide')
                window.location.reload()
            }else{
                window.messageBox.show(response['msg'])
            }
        },
        error:function (response) {  
            $('#'+btn).removeClass('disabled')
            $('#'+btn).text('确认')
            window.messageBox.show('服务端错误!请刷新重试或者联系管理员！')
        }
    });
}



// 带文件上传的ajax
function FileAjax(type,data,url,btn,modal) {  
    $('#'+btn).addClass('disabled')
    $('#'+btn).text('操作中。。')
    $.ajax({
        type: type,
        url: url,
        data: data,
        processData: false,  // tell jQuery not to process the data
        contentType: false,  // tell jQuery not to set contentType
        success: function (response) {
            console.log(response)
            $('#'+btn).removeClass('disabled')
            $('#'+btn).text('确认')
            if(response['code']=='0'){
                window.messageBox.show('操作成功')
                $('#'+modal).modal('hide')
                window.location.reload()
            }else{
                window.messageBox.show(response['msg'])
            }
        },
        error:function (response) {  
            $('#'+btn).removeClass('disabled')
            $('#'+btn).text('确认')
            window.messageBox.show('服务端错误!请刷新重试或者联系管理员！')
        }
    });
}


// 将obj序列化成查询字符串参数
function SerilizeObj2Query(obj) {
    var str = [];
    for (var p in obj)
     if (obj.hasOwnProperty(p)) {
      str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
     }
    return str.join("&");
}

// 重置所有查询条件　???
function removeAllQueryConditions(event) {  
    let queryUrl = $(event).data('query-url')
    window.location.href=queryUrl
}


function exportCsvBase(urlQuery,data,flag) {  
    var URL = urlQuery+"?"+SerilizeObj2Query(data)
    var URL_POST = "/basic/csv/"+"?"+SerilizeObj2Query(data)
    // 改写导出csv方式 
    if (flag == '1'){
        $.ajax({
            type: "post",
            url: URL_POST,
            data:{'urlPath':urlQuery},
            success: function (response) {
                if(response['code'] == '0'){
                    window.messageBox.show('导出成功!请到<工具--导出管理>查看结果')
                }
            }
        });
    }else{
        window.location.href= URL
    }
}